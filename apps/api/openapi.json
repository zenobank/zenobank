{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/payments": {
      "post": {
        "operationId": "PaymentController_createPayment_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ],
        "tags": [
          "Payment"
        ]
      }
    },
    "/api/v1/payments/{id}": {
      "get": {
        "operationId": "PaymentController_getPayment_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Payment"
        ]
      }
    },
    "/api/v1/payments/{id}/deposit": {
      "patch": {
        "operationId": "PaymentController_updatePaymentDepositSelection_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDepositSelectionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Payment"
        ]
      }
    },
    "/api/v1/currencies": {
      "get": {
        "operationId": "AssetController_getSupportedTokens_v1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Asset"
        ]
      }
    },
    "/api/v1/networks": {
      "get": {
        "operationId": "NetworksController_getNetworks_v1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NetworkResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Networks"
        ]
      }
    },
    "/api/v1/wallet": {
      "post": {
        "operationId": "WalletController_registerEvmWallet_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWalletDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Wallet"
        ]
      }
    },
    "/api/v1/webhooks/alchemy": {
      "post": {
        "operationId": "WebhooksController_receiveAlchemyWebhook_v1",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/api/v1/users/store": {
      "post": {
        "operationId": "UsersController_createStore_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create a new store",
        "tags": [
          "users"
        ]
      }
    }
  },
  "info": {
    "title": "API Docs",
    "description": "API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "api-key": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    },
    "schemas": {
      "CreatePaymentDto": {
        "type": "object",
        "properties": {
          "priceAmount": {
            "type": "string",
            "minimum": 1,
            "example": "100"
          },
          "priceCurrency": {
            "type": "string",
            "example": "USD"
          },
          "webhookUrl": {
            "type": "string",
            "nullable": true,
            "maxLength": 2048,
            "format": "uri",
            "example": "https://example.com/webhook"
          },
          "successUrl": {
            "type": "string",
            "nullable": true,
            "maxLength": 2048,
            "format": "uri",
            "example": "https://example.com/success"
          },
          "verificationToken": {
            "type": "string",
            "nullable": true,
            "maxLength": 256,
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": [
          "priceAmount",
          "priceCurrency",
          "webhookUrl",
          "successUrl",
          "verificationToken"
        ]
      },
      "PaymentStatus": {
        "type": "string",
        "enum": [
          "PENDING",
          "UNDER_PAYMENT",
          "COMPLETED",
          "EXPIRED",
          "CANCELLED"
        ]
      },
      "NetworkId": {
        "type": "string",
        "enum": [
          "ETHEREUM_MAINNET",
          "BASE_MAINNET",
          "ARBITRUM_MAINNET",
          "ETHEREUM_HOLESKY",
          "ETHEREUM_SEPOLIA"
        ]
      },
      "DepositDetailsDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "0x1234567890123456789012345678901234567890"
          },
          "currencyId": {
            "type": "string",
            "example": "USDC_ARBITRUM"
          },
          "amount": {
            "type": "string",
            "example": "100"
          },
          "networkId": {
            "example": "ARBITRUM_MAINNET",
            "allOf": [
              {
                "$ref": "#/components/schemas/NetworkId"
              }
            ]
          }
        },
        "required": [
          "address",
          "currencyId",
          "amount",
          "networkId"
        ]
      },
      "PaymentResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "priceAmount": {
            "type": "string",
            "example": "100"
          },
          "priceCurrency": {
            "type": "string",
            "example": "USD"
          },
          "status": {
            "example": "PENDING",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentStatus"
              }
            ]
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-09-18T17:15:26.969Z"
          },
          "expiredAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true,
            "example": "2025-09-18T18:15:26.971Z"
          },
          "depositDetails": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/DepositDetailsDto"
              }
            ]
          },
          "paymentUrl": {
            "type": "string",
            "format": "uri"
          },
          "webhookUrl": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "https://example.com/webhook"
          },
          "successUrl": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "https://example.com/success"
          }
        },
        "required": [
          "id",
          "priceAmount",
          "priceCurrency",
          "status",
          "createdAt",
          "expiredAt",
          "depositDetails",
          "paymentUrl",
          "webhookUrl",
          "successUrl"
        ]
      },
      "UpdateDepositSelectionDto": {
        "type": "object",
        "properties": {
          "tokenId": {
            "type": "string",
            "example": "USDC_BASE"
          },
          "networkId": {
            "example": "ETHEREUM_MAINNET",
            "allOf": [
              {
                "$ref": "#/components/schemas/NetworkId"
              }
            ]
          }
        },
        "required": [
          "tokenId",
          "networkId"
        ]
      },
      "TokenResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "USDC_ETHEREUM_MAINNET"
          },
          "canonicalTokenId": {
            "type": "string",
            "example": "USDC"
          },
          "standard": {
            "type": "string",
            "enum": [
              "NATIVE",
              "ERC20",
              "BEP20",
              "TRC20",
              "SPL"
            ],
            "example": "ERC20"
          },
          "address": {
            "type": "string",
            "example": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
          },
          "decimals": {
            "type": "number",
            "minimum": 0,
            "example": 6
          },
          "symbol": {
            "type": "string",
            "example": "USDC"
          },
          "isDeprecated": {
            "type": "boolean",
            "example": false
          },
          "networkId": {
            "enum": [
              "ETHEREUM_MAINNET",
              "BASE_MAINNET",
              "ARBITRUM_MAINNET",
              "ETHEREUM_HOLESKY",
              "ETHEREUM_SEPOLIA"
            ],
            "type": "string",
            "example": "ETHEREUM_MAINNET"
          }
        },
        "required": [
          "id",
          "canonicalTokenId",
          "standard",
          "address",
          "decimals",
          "symbol",
          "isDeprecated",
          "networkId"
        ]
      },
      "NetworkResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "enum": [
              "ETHEREUM_MAINNET",
              "BASE_MAINNET",
              "ARBITRUM_MAINNET",
              "ETHEREUM_HOLESKY",
              "ETHEREUM_SEPOLIA"
            ],
            "type": "string",
            "example": "ETHEREUM_MAINNET"
          },
          "name": {
            "type": "string",
            "example": "Ethereum Mainnet"
          },
          "displayName": {
            "type": "string",
            "example": "Ethereum"
          },
          "networkType": {
            "type": "string",
            "example": "EVM",
            "enum": [
              "EVM",
              "SOLANA"
            ]
          },
          "isTestnet": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "id",
          "name",
          "displayName",
          "networkType",
          "isTestnet"
        ]
      },
      "CreateWalletDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          }
        },
        "required": [
          "address"
        ]
      },
      "CreateStoreDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 256,
            "example": "My Store"
          },
          "domain": {
            "type": "string",
            "maxLength": 256,
            "example": "my-store.com"
          },
          "walletAddress": {
            "type": "string",
            "example": "0xc429e068b65b3462f0e422b3ea388a7a37b23bff"
          }
        },
        "required": [
          "name",
          "domain",
          "walletAddress"
        ]
      },
      "WalletResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the wallet",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "address": {
            "type": "string",
            "description": "Wallet address",
            "example": "0xc429e068b65b3462f0e422b3ea388a7a37b23bff"
          },
          "network": {
            "enum": [
              "ETHEREUM_MAINNET",
              "BASE_MAINNET",
              "ARBITRUM_MAINNET",
              "ETHEREUM_HOLESKY",
              "ETHEREUM_SEPOLIA"
            ],
            "type": "string",
            "description": "Wallet network",
            "example": "ETHEREUM_MAINNET"
          },
          "label": {
            "type": "string",
            "nullable": true,
            "description": "Wallet label",
            "example": "Main Wallet"
          }
        },
        "required": [
          "id",
          "address",
          "network",
          "label"
        ]
      },
      "StoreResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the store",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "description": "Name of the store",
            "example": "My Store"
          },
          "domain": {
            "type": "string",
            "description": "Domain of the store",
            "example": "my-store.com"
          },
          "apiKey": {
            "type": "string",
            "description": "API key for the store",
            "example": "cuid_1234567890abcdef"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp",
            "example": "2023-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp",
            "example": "2023-01-01T00:00:00.000Z"
          },
          "wallets": {
            "description": "Associated wallets",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletResponseDto"
            }
          }
        },
        "required": [
          "id",
          "name",
          "domain",
          "apiKey",
          "createdAt",
          "updatedAt",
          "wallets"
        ]
      }
    }
  }
}